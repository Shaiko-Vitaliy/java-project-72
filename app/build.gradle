plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'com.adarshr.test-logger' version '3.1.0'
    id 'application'
    id 'io.ebean' version '13.6.5'
}

group = 'io.hexlet'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

application {
    mainClass = 'hexlet.code.App'
}

compileJava {
    options.release = 17
}

dependencies {
    implementation 'io.javalin:javalin:4.0.1'

    implementation 'org.slf4j:slf4j-simple:1.7.36'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'io.ebean:ebean:13.6.5'
    implementation 'io.ebean:ebean-ddl-generator:13.6.5'
    implementation 'io.ebean:ebean-querybean:13.6.5'
    implementation 'io.ebean:ebean-migration:13.6.0'
    implementation 'io.ebean:ebean-annotation:8.3'
    annotationProcessor 'io.ebean:querybean-generator:13.6.5'

    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
    implementation 'javax.activation:activation:1.1.1'
    implementation 'javax.persistence:javax.persistence-api:2.2'
}

run {
    standardInput = System.in
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

testlogger {
    showStandardStreams true
}

jacoco {
    toolVersion = "0.8.7"
}

task stage(dependsOn: ['clean', 'installDist']) {
    installDist.mustRunAfter clean
}

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'hexlet.code.MigrationGenerator'
}