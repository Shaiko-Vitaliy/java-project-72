plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'com.adarshr.test-logger' version '3.2.0'
    id 'application'
    id 'io.ebean' version '13.6.5'
    id 'com.github.ben-manes.versions' version '0.39.0'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

application {
    mainClass = 'hexlet.code.App'
}

compileJava {
    options.release = 17
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'io.javalin:javalin:4.0.1'
    implementation 'org.thymeleaf:thymeleaf:3.0.12.RELEASE'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.0.0'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    implementation 'org.webjars:bootstrap:5.1.1'

    implementation 'org.slf4j:slf4j-simple:1.7.36'
    implementation 'org.jsoup:jsoup:1.15.4'

    implementation 'commons-validator:commons-validator:1.7'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'io.ebean:ebean:13.6.5'
    implementation 'io.ebean:ebean-ddl-generator:13.6.5'
    implementation 'io.ebean:ebean-querybean:13.6.5'
    implementation 'io.ebean:ebean-migration:13.6.0'
    implementation 'io.ebean:ebean-annotation:8.3'
    annotationProcessor 'io.ebean:querybean-generator:13.6.5'
    testImplementation 'io.ebean:ebean-test:12.11.5'

    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.postgresql:postgresql:42.3.3'

    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
    implementation 'javax.activation:activation:1.1.1'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    testImplementation 'com.konghq:unirest-java:3.14.1'
    implementation 'com.konghq:unirest-java:3.14.1'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
}

run {
    standardInput = System.in
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

testlogger {
    showStandardStreams true
}

jacoco {
    toolVersion = "0.8.7"
}

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'hexlet.code.MigrationGenerator'
}

task stage(dependsOn: ['clean', 'installDist']) {
    installDist.mustRunAfter clean
}